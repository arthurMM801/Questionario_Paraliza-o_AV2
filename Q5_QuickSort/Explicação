Na questão 4, foi proposta a paralelização do quicksort como sendo uma boa escolha, onde um dos aspectos levados em consideração
foi que o uso da divisão e conquista na ordenação resultaria em uma fácil e eficaz paralelização do algoritmo, e que devido a sua
eficácia ele só teria um ganho de tempo na sua paralelização para grandes volumes de dados. No entanto, ao paralelizar o algoritmo,
foi constatado um aumento considerável no tempo de execução.

1000 números
Serial = 2ms
Paralelo = 168 ms

100.000 números
Serial = 80ms
Paralelo = 276179 ms

Como podemos ver mesmo para grandes volumes de dados a paralelização ainda não é viável, isso se deve ao fato de que o algoritmo já é
muito eficaz na forma serial, quando paralelizado essa modelagem vai criando uma thread para cada divisão entre maior e menor
que o elemento pivô, gerando uma paralelização excessiva, maior que o número de threads e perde muito tempo para organizar as threads
e juntar os dados no final do processo, causando um overhead e inviabilizando a paralelização.

