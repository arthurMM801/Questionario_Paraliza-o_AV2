3. Uma pessoa estudante do curso de Ciência da Computação paralelizou determinado
algoritmo de ordenação de dados. Ao finalizar a codificação, e imprimir os tempos, foi
possível perceber que o processo paralelizado gastou mais tempo que o processo serial.
Disserte o motivo disso.(1 ponto)


Existem vários motivos para que a paralelização tenha demorado mais do que a ordenação serial como:

Overhead da paralelização, em que o tempo necessário para organizar a paralelização é muito alto. Então dividir os dados ou
tarefas e atribuir-las para as threads está consumindo muito tempo, sendo necessário rever essa divisão.

Má distribuição de dados, também é um problema comum quando se vai paralelizar, é possível que a divisão de tarefas de
forma eficiente esteja atrasando o algoritmo de ordenação, já que teremos threads processado por mais tempo do que outras,
atrasando o processo de ordenação geral, tornado-o pior que o serial.

É possível também que o caso de teste usado nos algoritmos não seja adequado para testar a eficiência, uma vez que algoritmos
que usam da paralelização são melhores quando aplicados para grandes volumes de dados é possível que o caso testado para comparar
os tempos de execução não tenham um volume adequado fazendo o algoritmo paralelo performar pior que o serial.

Outra possibilidade é a escolha do algoritmo de ordenação ou uma má  implementação, já a maneira como o algoritmo paralelo foi
desenvolvido pode resultar em uma ordenação ineficiente, tornando o algoritmo paralelo uma péssima
opção na ordenação dos dados.

